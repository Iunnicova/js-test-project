// 10:40
@use '../helpers' as *;

.select {
  // Блок-обёртка для кастомного селекта

  &__original-control {
    min-width: rem(100); // минимальная ширина

    @include mobile-above {
      @include visually-hidden; // делает элемент визуально невидимым, но доступным для экранных читалок
    }
  }

  &__body {
    position: relative;

    @include mobile {
      @include visually-hidden; // располагался относительно этой обёртки.
    }
  }

  &__button,
  &__option {
    user-select: none; //запрещаем выделение текста (чтобы случайно не выделялся при клике или дабл-клике)
    cursor: pointer; // показываем "руку" при наведении

    * {
      pointer-events: none; //отключаем обработку кликов для всех вложенных элементов
    }
  }

  // Внешний вид кнопки, которая отображает текущий выбранный элемент
  // и стрелку справа.
  &__button {
    display: flex;
    justify-content: space-between;
    align-items: center;
    column-gap: rem(6); //чтобы стрелка с иконкой не слиплись
    transition-duration: var(--transition-duration); // плавность трансформаций

    @include laptop {
      column-gap: rem(4);
    }

    &.is-expanded {
      &::after {
        rotate: -180deg; // Когда дропдаун открыт, вращаем стрелку.
      }
    }

    // Псевдоэлемент для стрелки (иконка).
    &::after {
      --size: #{rem(24)}; //переменная для размера стрелки

      @include square(var(--size)); // обычно задаёт одинаковые width/height

      content: '';
      background: url('../../icons/arrow-down_white.svg') center/contain
        no-repeat;
      transition-duration: var(
        --transition-duration
      ); // плавность трансформаций

      @include laptop {
        --size: #{rem(20)};
      }
    }
  }

  // Выпадающий список опций 10:41
  &__dropdown {
    position: absolute; // позиционируется относительно .__body
    top: calc(100% + #{rem(4)}); // чуть ниже кнопки от границы
    display: grid;
    row-gap: rem(4);
    min-width: rem(150);
    max-width: rem(300);
    max-height: rem(250);
    overflow-y: auto; // max-height не сломало верстку и появился скрол
    padding: rem(4);
    background-color: var(--color-dark-10);
    border: var(--border);
    border-radius: rem(6);
    transition-duration: var(
      --transition-duration
    ); // для анимации открытия/закрытия

    // Когда дропдаун выровнен по левому краю кнопки
    &.is-on-the-left-side {
      left: 0;
      transform-origin: 0 0; // точка масштабирования — левый верхний угол
    }

    // Когда дропдаун выровнен по правому краю кнопки
    &.is-on-the-right-side {
      right: 0;
      transform-origin: 100% 0; // точка масштабирования — правый верхний угол
    }

    // Состояние "свернут": скрываем дропдаун.
    &:not(.is-expanded) {
      @include hide; //чтобы визуально элемент скрыть
      scale: 0; // чтобы было плавное появление при переключении класса .is-expanded.
    }
  }

  &__option {
    display: flex;
    justify-content: space-between; // текст слева, вспомогательный элемент справа
    align-items: center;
    column-gap: rem(10);
    padding: rem(10);
    border: var(--border);
    border-radius: inherit; // наследуем скругление от .__dropdown

    // задаёт стиль при наведении
    @include hover {
      color: var(--color-accent);
      background-color: var(--color-dark);
    }

    //текущфя выбранная область
    &.is-selected {
      color: var(--color-accent);

      // Показываем галочку напротив выбранной опции.
      &::after {
        content: '✔';
      }
    }

    //отвечает за оформление текущей (подсвеченной) опции в выпадающем списке.Навигация клавиатурой или ховер мышью — когда пользователь двигается по списку стрелками вверх/вниз.
    &.is-current {
      border-color: var(--color-accent); //меняет цвет рамки вокруг этой опции
    }
  }
}
